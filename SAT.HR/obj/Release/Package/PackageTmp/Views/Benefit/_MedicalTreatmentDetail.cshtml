@model SAT.HR.Models.BenefitMedicalViewModel

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-detail" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.UserID)
    @Html.HiddenFor(m => m.BmID)

    <div class="form-horizontal">
        <div class="row">
            @Html.Label("ปีบัญชี", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-3">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmYear, new { @class = "form-control", type = "number", required = "true" })
                </div>
            </div>
            @Html.Label("ประเภทสิทธิ", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-5">
                <div class="dropdown bootstrap-select dropup">
                    @Html.DropDownListFor(x => x.ClID, new SelectList((IEnumerable<SelectListItem>)ViewBag.ClaimType, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", required = "true" })
                </div>
            </div>
        </div>
        <div class="row">
            @Html.Label("ผู้รับ", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-3">
                <div class="dropdown bootstrap-select dropup">
                    @Html.DropDownListFor(x => x.RecID, new SelectList((IEnumerable<SelectListItem>)ViewBag.RecieveType, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", required = "true" })
                </div>
            </div>
            @Html.Label("ชื่อ-สกุล", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-5">
                <div class="dropdown bootstrap-select dropup">
                    @Html.DropDownListFor(x => x.RecFullName, new SelectList((IEnumerable<SelectListItem>)ViewBag.RecFullName, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", required = "true" })
                </div>
            </div>
        </div>
        <div class="row m-t-10">
            @Html.Label("วันที่เข้ารักษา", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-3">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmDate, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker" })
                </div>
            </div>
            @Html.Label("เลขบัตรประชาชน", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-5">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmCardID, new { @class = "form-control", type = "number" })
                </div>
            </div>
        </div>
        <div class="row">
            @Html.Label("ค่าห้อง+ค่าอาหาร", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-3">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmAmoutService, new { @class = "form-control" })
                </div>
            </div>
            @Html.Label("ค่ารักษาพยาบาล", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-5">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmAmoutCare, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            @Html.Label("หมายเหตุ", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                <div class="form-group bmd-form-group">
                    @Html.TextBoxFor(m => m.BmRemark, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
}
<script>
    if ('@Model.RecFullName' != '') {
        $('select[name=RecFullName]').val('@Model.RecFullName');
        $('select[name=RecFullName]').selectpicker('refresh');
    }

    $('.selectpicker').selectpicker();

    $('.datepicker').datetimepicker({
        format: 'DD/MM/YYYY',
        icons: {
            time: "fa fa-clock-o",
            date: "fa fa-calendar",
            up: "fa fa-chevron-up",
            down: "fa fa-chevron-down",
            previous: 'fa fa-chevron-left',
            next: 'fa fa-chevron-right',
            today: 'fa fa-screenshot',
            clear: 'fa fa-trash',
            close: 'fa fa-remove'
        }
    });

    $('select[name=RecID]').change(function () {
        var recid = $('select[name=RecID]').val();
        var userid = $("#UserID").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetUserFamilyByRec", "Employee")',
            data: { recid: recid, userid: userid },
            dataType: 'json',
            success: function (res) {
                if (recid == '1' || recid == '2' || recid == '3') {
                    $('select[name=RecFullName]').empty().append('<option value=' + res[0].UfName + '>' + res[0].UfName + '</option>');
                }
                else {
                    $('select[name=RecFullName]').empty().append('<option value=""> -- กรุณาเลือก -- </option>');
                    $.each(res, function (key, entry) {
                        $('select[name=RecFullName]').append($('<option>', { value: entry.UfName, text: entry.UfName }));
                    });
                }
                $('select[name=RecFullName]').selectpicker('refresh');
            }
        });
    });


</script>
