@model SAT.HR.Models.UserRoleMenuViewModel

<!-- Tip 1: You can change the color of the sidebar using: data-color="rose | azure | green | orange | danger" / Tip 2: you can also add an image using data-image tag -->
<div class="sidebar" data-color="purple" data-background-color="black" data-image="@Url.Content("~/Content/assets/img/sidebar-0.jpg")">
    <div class="logo">
        <a href="javascript:void(0)" class="simple-text logo-mini"> HR </a>
        <a href="#javascript:void(0)" class="simple-text logo-normal"> ระบบบริหารงานบุคคล </a>
    </div>
    <div class="sidebar-wrapper">
        <div class="user">
            <div class="photo">
                <img src="@Model.Avatar" />
            </div>
            <div class="user-info">
                <a data-toggle="collapse" href="#collapseMenu" class="username">
                    <span>
                        @Model.FullName
                        <b class="caret"></b>
                    </span>
                </a>
                <div class="collapse" id="collapseMenu">
                    <ul class="nav">
                        <li class="nav-item">
                            <a class="nav-link" href="javascript:void(0)">
                                <span class="sidebar-mini"></span>
                                <span class="sidebar-normal"> เปลี่ยนรหัสผ่าน </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Index", "Home")">
                                <span class="sidebar-mini"></span>
                                <span class="sidebar-normal"> ออกจากระบบ </span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <ul class="nav">

            @{
                string actionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
                string controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
                if (controllerName == "Employee")
                {
                    if (actionName == "Detail" || actionName == "Add") { actionName = "Index"; }
                    else if (actionName == "LevelTransferDetail") { actionName = "LevelTransfer"; }
                    else if (actionName == "PositionTransferDetail") { actionName = "PositionTransfer"; }
                }
                else if (controllerName == "Benefit")
                {
                    if (actionName == "Detail") { actionName = "Index"; }
                }
                else if (controllerName == "HumanResource")
                {
                    if (actionName == "CapabilityDetail") { actionName = "Capability"; }
                    else if (actionName == "TrainningDetail") { actionName = "Trainning"; }
                    else if (actionName == "IndividualPlanDetail") { actionName = "IndividualPlan"; }
                    else if(actionName == "EvaluationDetail") { actionName = "Evaluation"; }
                }
                else if (controllerName == "Master")
                {
                    if (actionName == "RoleUser" || actionName == "RoleMenu") { actionName = "Permission"; }
                }
                string activeDashboard = (actionName == "Dashboard") ? "active" : string.Empty;
            }

            <li class="nav-item @activeDashboard">
                <a class="nav-link" href="@Url.Action("Dashboard", "Home")">
                    <i class="material-icons">home</i>
                    <p> หน้าแรก </p>
                </a>
            </li>

            @foreach (var item in Model.ListMenu.Where(m => m.ParentID == 0))
            {
                string active = (controllerName == @item.ControllerName) ? "active" : string.Empty;
                string show = (controllerName == @item.ControllerName) ? "show" : string.Empty;

                <li class="nav-item @active" id="li_@item.MenuID">
                    <a class="nav-link" data-toggle="collapse" href="#m_@item.MenuID">
                        <i class="material-icons">@item.Icon</i>
                        <p>@item.MenuName<b class="caret"></b></p>
                    </a>
                    <div class="collapse @show" id="m_@item.MenuID">
                        <ul class="nav">

                            @foreach (var item2 in Model.ListMenu.Where(m => m.ParentID == @item.MenuID))
                            {
                                string controllername = @item2.ControllerName;
                                string actname = @item2.ActionName.Split('/')[0];
                                string active2 = (actionName == actname && controllerName == controllername) ? "active" : string.Empty;

                                <li class="nav-item @active2">
                                    <a class="nav-link" href="@Url.Action(@item2.ActionName, @item2.ControllerName)">
                                        <span class="sidebar-normal"> @item2.MenuName </span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </li>
            }

        </ul>
    </div>
</div>