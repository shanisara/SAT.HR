@model SAT.HR.Models.LevelTransferDetailViewModel

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-level-transfer" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.MlStatus)

    <div class="form-horizontal">
        <div class="row">
            <label class="col-sm-2 col-form-label" for="UserID">พนักงาน:<span class="text-danger"> *</span> </label>
            <div class="col-sm-5">
                @Html.Hidden("UserName")
                @Html.DropDownListFor(n => n.UserID, new SelectList((IEnumerable<SelectListItem>)ViewBag.Employee, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", data_show_subtext = "true", data_live_search = "true", data_size = "5", required = "true" })
            </div>
        </div>
        <div class="row">
            @Html.Label("ฝ่าย/กอง/งาน: ", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                <span class="label-text user-mp"></span>
            </div>
        </div>
        <div class="row">
            @Html.Label("ตำแหน่งปัจจุบัน: ", null, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                <span class="label-text user-po"></span>
            </div>
        </div>
        <div class="row">
        @Html.Label("ระดับ: ", null, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-2">
            @Html.Hidden("LevelOld")
            <span class="label-text user-level"></span>
        </div>
        @Html.Label("ขั้น: ", null, new { @class = "col-sm-1 col-form-label text-right" })
        <div class="col-sm-2">
            @Html.Hidden("StepOld")
            <span class="label-text user-step"></span>
        </div>
        @Html.Label("เงินเดือน: ", null, new { @class = "col-sm-1 col-form-label" })
        <div class="col-sm-2">
            @Html.Hidden("SalaryOld")
            <span class="label-text user-salary"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 ml-auto mr-auto m-t-20 m-b-10 text-left">
            <h5 class="card-title  text-primary"><span>ระดับ/ขั้นที่ปรับ</span></h5>
        </div>
    </div>
    <div class="row">
        <label class="col-sm-2 col-form-label" for="UserID">ระดับ:<span class="text-danger"> *</span> </label>
        <div class="col-sm-2">
            @Html.Hidden("LevelNew")
            @Html.DropDownListFor(n => n.MlLevelNew, new SelectList((IEnumerable<SelectListItem>)ViewBag.SalaryLevel, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", data_show_subtext = "true", data_live_search = "true", data_size = "5", required="true" })
        </div>
        <label class="col-sm-1 col-form-label text-right" for="MlStepNew">ขั้น:<span class="text-danger"> *</span> </label>
        <div class="col-sm-2">
            @Html.Hidden("StepNew")
            @Html.DropDownListFor(n => n.MlStepNew, new SelectList((IEnumerable<SelectListItem>)ViewBag.SalaryStep, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", data_show_subtext = "true", data_live_search = "true", data_size = "5" })
        </div>
        @Html.Label("เงินเดือน: ", null, new { @class = "col-sm-1 col-form-label" })
        <div class="col-sm-2">
            @Html.Hidden("SalaryNew")
            <span class="label-text new-salary"></span>
        </div>
    </div>
    <div class="row">
        @Html.Label("หมายเหตุ: ", null, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <div class="form-group bmd-form-group">
                @Html.TextBoxFor(m => m.MlRemark, new { @class = "form-control" })
            </div>
        </div>
    </div>
    </div>
}

<script>
    $('.selectpicker').selectpicker();

    $("#UserID").change(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetDetailByUser", "Master")',
            data: { userid: $('#UserID').val() },
            dataType: 'json',
            success: function (res) {
                var belong = res.ManPower;
                var poname = res.Position;
                var level = res.Level;
                var step = res.Step;
                var salary = res.Salary;
                $('.user-mp').text(belong);
                $('.user-po').text(poname);
                $('.user-level').text(level);
                $('.user-step').text(step);
                $('.user-salary').text(accounting.formatNumber(salary, 2));
            }
        });
    });

    $("#MlLevelNew").change(function () {
        var level = $('#MlLevelNew').val();
        var step = '1.00';
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SalaryByStep", "Master")',
            data: { level: level, step: step },
            dataType: 'json',
            success: function (res) {
                $('select[name=MlStepNew]').val(step);
                $('select[name=MlStepNew]').selectpicker('refresh');

                var salary = accounting.formatNumber(res.Salary, 2);
                $('.new-salary').text(salary);
            }
        });
    });

    $("#MlStepNew").change(function () {
        var level = $('#MlLevelNew').val();
        var step = $('#MlStepNew').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SalaryByStep", "Master")',
            data: { level: level, step: step },
            dataType: 'json',
            success: function (res) {
                var salary = accounting.formatNumber(res.Salary, 2);
                $('.new-salary').text(salary);
            }
        });
    });


</script>