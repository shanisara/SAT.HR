//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAT.HR.Data.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SATEntities : DbContext
    {
        public SATEntities()
            : base("name=SATEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_ActionType> tb_ActionType { get; set; }
        public virtual DbSet<tb_Capability> tb_Capability { get; set; }
        public virtual DbSet<tb_CapabilityType> tb_CapabilityType { get; set; }
        public virtual DbSet<tb_Certificate> tb_Certificate { get; set; }
        public virtual DbSet<tb_Degree> tb_Degree { get; set; }
        public virtual DbSet<tb_Department> tb_Department { get; set; }
        public virtual DbSet<tb_Discipline> tb_Discipline { get; set; }
        public virtual DbSet<tb_Division> tb_Division { get; set; }
        public virtual DbSet<tb_DocNumber> tb_DocNumber { get; set; }
        public virtual DbSet<tb_Education> tb_Education { get; set; }
        public virtual DbSet<tb_Holiday> tb_Holiday { get; set; }
        public virtual DbSet<tb_Insignia> tb_Insignia { get; set; }
        public virtual DbSet<tb_LeaveType> tb_LeaveType { get; set; }
        public virtual DbSet<tb_Level> tb_Level { get; set; }
        public virtual DbSet<tb_Major> tb_Major { get; set; }
        public virtual DbSet<tb_Menu> tb_Menu { get; set; }
        public virtual DbSet<tb_Nationality> tb_Nationality { get; set; }
        public virtual DbSet<tb_Position> tb_Position { get; set; }
        public virtual DbSet<tb_Religion> tb_Religion { get; set; }
        public virtual DbSet<tb_Role> tb_Role { get; set; }
        public virtual DbSet<tb_RoleMenu> tb_RoleMenu { get; set; }
        public virtual DbSet<tb_RoleUser> tb_RoleUser { get; set; }
        public virtual DbSet<tb_Salary> tb_Salary { get; set; }
        public virtual DbSet<tb_Section> tb_Section { get; set; }
        public virtual DbSet<tb_Sex> tb_Sex { get; set; }
        public virtual DbSet<tb_SysConfig> tb_SysConfig { get; set; }
        public virtual DbSet<tb_Title> tb_Title { get; set; }
        public virtual DbSet<tb_UserType> tb_UserType { get; set; }
        public virtual DbSet<vw_Department> vw_Department { get; set; }
        public virtual DbSet<vw_RoleMenu> vw_RoleMenu { get; set; }
        public virtual DbSet<vw_RoleMenuReport> vw_RoleMenuReport { get; set; }
        public virtual DbSet<vw_RoleMenuTab> vw_RoleMenuTab { get; set; }
        public virtual DbSet<vw_RoleUser> vw_RoleUser { get; set; }
        public virtual DbSet<vw_Section> vw_Section { get; set; }
        public virtual DbSet<vw_Title> vw_Title { get; set; }
        public virtual DbSet<tb_User> tb_User { get; set; }
        public virtual DbSet<vw_User> vw_User { get; set; }
    
        public virtual ObjectResult<sp_Menu_GetByUser_Result1> sp_Menu_GetByUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetByUser_Result1>("sp_Menu_GetByUser", userIDParameter);
        }
    
        public virtual ObjectResult<sp_Menu_GetByRole_Result2> sp_Menu_GetByRole(Nullable<int> roleID, Nullable<int> parentID, string menuType)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var menuTypeParameter = menuType != null ?
                new ObjectParameter("MenuType", menuType) :
                new ObjectParameter("MenuType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetByRole_Result2>("sp_Menu_GetByRole", roleIDParameter, parentIDParameter, menuTypeParameter);
        }
    }
}
