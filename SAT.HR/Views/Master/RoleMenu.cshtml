@model SAT.HR.Models.RoleMenuViewModel

@{
    ViewBag.Title = "RoleMenu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        padding: 3px 8px;
    }
</style>

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card-body">
                <div class="form-horizontal">
                    @Html.HiddenFor(m => m.RoleID)
                    <h4 class="card-title">
                        <span>รายการกลุ่ม > กำหนดสิทธ์</span>
                    </h4>
                    <button class="btn pull-right btn-Back">ย้อนกลับ<div class="ripple-container"></div></button>
                    <div class="row">
                        <label class="col-sm-2 col-form-label">กลุ่ม</label>
                        <div class="col-sm-5">
                            <div class="form-group bmd-form-group">
                                @Model.RoleName
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <label class="col-sm-2 col-form-label">รายละเอียด</label>
                        <div class="col-sm-5">
                            <div class="form-group bmd-form-group">
                                @Model.RoleDesc
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-tabs card-header-primary">
                    <div class="nav-tabs-navigation">
                        <div class="nav-tabs-wrapper">
                            <span class="nav-tabs-title">กำหนดสิทธิ์:</span>
                            <ul class="nav nav-tabs" data-tabs="tabs">
                                <li class="nav-item">
                                    <a class="nav-link active show" href="#menu-sat" data-toggle="tab">
                                        <i class="material-icons">toc</i> เมนู
                                        <div class="ripple-container"></div>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#menu-tab" data-toggle="tab">
                                        <i class="material-icons">tab</i> แท็บ
                                        <div class="ripple-container"></div>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#menu-report" data-toggle="tab">
                                        <i class="material-icons">equalizer</i> รายงาน
                                        <div class="ripple-container"></div>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <div class="tab-pane active show" id="menu-sat">
                            @Html.Partial("_Menu", Model.ListRoleMenu)
                        </div>
                        <div class="tab-pane" id="menu-tab">
                            @Html.Partial("_MenuTab", Model.ListRoleMenuTab)
                        </div>
                        <div class="tab-pane" id="menu-report">
                            @Html.Partial("_MenuReport", Model.ListRoleMenuReport)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {

            var dataTable = {
                getData: function (el) {
                    var postData = [];
                    var $table = $("#" + el + " tbody");
                    $table.find('tr').each(function (i, el) {
                        var parentid = $(this).data("parent-id");   // $(this).attr("data-parent-id")
                        var roleid = $(this).data("role-id");       // $(this).attr("data-role-id")
                        var menuid = $(this).data("menu-id");       // $(this).attr("data-menu-id")
                        var type = $(this).data("type-name");       // $(this).attr("data-type-name")
                        var view = parentid != 0 ? $(this).find("td").eq(2).find('input[type="checkbox"]').is(":checked") : $(this).find("td").eq(1).find('input[type="checkbox"]').is(":checked");
                        var add = $(this).find("td").eq(3).find('input[type="checkbox"]').is(":checked");
                        var edit = $(this).find("td").eq(4).find('input[type="checkbox"]').is(":checked");
                        var del = $(this).find("td").eq(5).find('input[type="checkbox"]').is(":checked");
                        postData.push({ "RoleID": roleid, "MenuID": menuid, MenuType: type, "R_View": view, "R_Add": add, "R_Edit": edit, "R_Delete": del });
                    });
                    return postData;
                },
                saveData: function (el) {
                    var postData = dataTable.getData(el);
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SaveRoleMenu", "Master")',
                        data: JSON.stringify(postData),
                        dataType: 'json',
                        contentType: 'application/json',
                        success: function (res) {
                            if (res.MessageCode == null) {
                                swal({
                                    title: "",
                                    text: "@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.SaveSucceed)",
                                    type: "success",
                                    buttonsStyling: false,
                                    confirmButtonClass: "btn btn-success",
                                    confirmButtonText: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnClose)',
                                }).catch(swal.noop)
                            }
                            else {
                                swal({
                                    title: "Save failed!",
                                    text: res.MessageText,
                                    type: "error",
                                    buttonsStyling: false,
                                    confirmButtonClass: "btn btn-info",
                                }).catch(swal.noop)
                            }
                        }
                    });
                },
                MenuCheckAllView: function () {
                    if ($(".m-view").length == $(".m-view:checked").length) {
                        $(".all-m-view").prop("checked", true);
                    } else {
                        $(".all-m-view").prop('checked', false);
                    }
                },
                MenuCheckAllAdd: function () {
                    if ($(".m-add").length == $(".m-add:checked").length) {
                        $(".all-m-add").prop("checked", true);
                    } else {
                        $(".all-m-add").prop('checked', false);
                    }
                },
                MenuCheckAllEdit: function () {
                    if ($(".m-edit").length == $(".m-edit:checked").length) {
                        $(".all-m-edit").prop("checked", true);
                    } else {
                        $(".all-m-edit").prop('checked', false);
                    }
                },
                MenuCheckAllDelete: function () {
                    if ($(".m-del").length == $(".m-del:checked").length) {
                        $(".all-m-del").prop("checked", true);
                    } else {
                        $(".all-m-del").prop('checked', false);
                    }
                },
                TabCheckAllView: function () {
                    if ($(".t-view").length == $(".t-view:checked").length) {
                        $(".all-t-view").prop("checked", true);
                    } else {
                        $(".all-t-view").prop('checked', false);
                    }
                },
                TabCheckAllAdd: function () {
                    if ($(".t-add").length == $(".t-add:checked").length) {
                        $(".all-t-add").prop("checked", true);
                    } else {
                        $(".all-t-add").prop('checked', false);
                    }
                },
                TabCheckAllEdit: function () {
                    if ($(".t-edit").length == $(".t-edit:checked").length) {
                        $(".all-t-edit").prop("checked", true);
                    } else {
                        $(".all-t-edit").prop('checked', false);
                    }
                },
                TabCheckAllDelete: function () {
                    if ($(".t-del").length == $(".t-del:checked").length) {
                        $(".all-t-del").prop("checked", true);
                    } else {
                        $(".all-t-del").prop('checked', false);
                    }
                },
                ReportCheckAllView: function () {
                    if ($(".r-view").length == $(".r-view:checked").length) {
                        $(".all-r-view").prop("checked", true);
                    } else {
                        $(".all-r-view").prop('checked', false);
                    }
                },
            }

            dataTable.MenuCheckAllView();
            dataTable.MenuCheckAllAdd();
            dataTable.MenuCheckAllEdit();
            dataTable.MenuCheckAllDelete();
            dataTable.TabCheckAllView();
            dataTable.TabCheckAllAdd();
            dataTable.TabCheckAllEdit();
            dataTable.TabCheckAllDelete();
            dataTable.ReportCheckAllView();


            // Back
            $(".btn-Back").click(function () {
                var url = '@Url.Action("Permission", "Master")';
                window.location.href = url;
            });


            // Save
            $(".btn-save-menu").click(function () {
                dataTable.saveData("tb-menu");
            });

            $(".btn-save-tab").click(function () {
                dataTable.saveData("tb-menu-tab");
            });

            $(".btn-save-report").click(function () {
                dataTable.saveData("tb-menu-report");
            });


            // Menu
            $(".all-m-view").change(function () {
                var checked = $(this).is(':checked');
                if(checked){
                    $('.m-view').prop('checked', true);
                }
                else {
                    $('.m-view').prop('checked', false);
                }
            });

            $(".all-m-add").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.m-add').prop('checked', true);
                }
                else {
                    $('.m-add').prop('checked', false);
                }
            });

            $(".all-m-edit").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.m-edit').prop('checked', true);
                }
                else {
                    $('.m-edit').prop('checked', false);
                }
            });

            $(".all-m-del").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.m-del').prop('checked', true);
                }
                else {
                    $('.m-del').prop('checked', false);
                }
            });

            $(".m-view").click(function () {
                dataTable.MenuCheckAllView();
            });

            $(".m-add").click(function () {
                dataTable.MenuCheckAllAdd();
            });

            $(".m-edit").click(function () {
                dataTable.MenuCheckAllEdit();
            });

            $(".m-del").click(function () {
                dataTable.MenuCheckAllDelete();
            });


            // Tab
            $(".all-t-view").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.t-view').prop('checked', true);
                }
                else {
                    $('.t-view').prop('checked', false);
                }
            });

            $(".all-t-add").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.t-add').prop('checked', true);
                }
                else {
                    $('.t-add').prop('checked', false);
                }
            });

            $(".all-t-edit").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.t-edit').prop('checked', true);
                }
                else {
                    $('.t-edit').prop('checked', false);
                }
            });

            $(".all-t-del").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.t-del').prop('checked', true);
                }
                else {
                    $('.t-del').prop('checked', false);
                }
            });

            $(".t-view").click(function () {
                dataTable.TabCheckAllView();
            });

            $(".t-add").click(function () {
                dataTable.TabCheckAllAdd();
            });

            $(".t-edit").click(function () {
                dataTable.TabCheckAllEdit();
            });

            $(".t-del").click(function () {
                dataTable.TabCheckAllDelete();
            });


            // Report
            $(".all-r-view").change(function () {
                var checked = $(this).is(':checked');
                if (checked) {
                    $('.r-view').prop('checked', true);
                }
                else {
                    $('.r-view').prop('checked', false);
                }
            });

            $(".r-view").click(function () {
                dataTable.ReportCheckAllView();
            });

        });
    </script>
}
