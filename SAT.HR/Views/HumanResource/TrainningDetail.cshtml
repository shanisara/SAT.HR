@model SAT.HR.Models.CourseViewModel
@{
    ViewBag.Title = "TrainningDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .col-form-label {
        font-size: 14px;
        line-height: 1.5;
    }

    .label-text {
        font-size: 14px;
    }
</style>
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">accessibility</i>
                    </div>
                    <h4 class="card-title">
                        <span> การฝึกอบรม: </span>
                        <span class="text-primary">@Model.CourseNo</span>
                        <button type="button" class="btn btn-round pull-right btn-back">ย้อนกลับ</button>
                    </h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "formDetail" }))
                    {
                        @Html.HiddenFor(m => m.CourseID)
                        @Html.HiddenFor(m => m.CourseNo)

                        <div>
                            <form class="form-horizontal">
                                <div class="row">
                                    <label class="col-sm-2 col-form-label">ชื่อหลักสูตร</label>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.CourseName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <label class="col-sm-1 col-form-label">ประเภท</label>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.DropDownListFor(n => n.CourseTID, new SelectList((IEnumerable<SelectListItem>)ViewBag.TrainingType, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", data_show_subtext = "true", data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-sm-2 col-form-label">สถานที่</label>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <label class="col-sm-1 col-form-label">ประเทศ</label>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.DropDownListFor(n => n.CountryID, new SelectList((IEnumerable<SelectListItem>)ViewBag.Country, "Value", "Text"), "-- กรุณาเลือก --", new { @class = "selectpicker", data_style = "select-with-transition", data_show_subtext = "true", data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-sm-2 col-form-label">รายละเอียด</label>
                                    <div class="col-sm-10">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.CourseDesc, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-sm-2 col-form-label">วันที่เริ่ม</label>
                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.DateFrom, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker" })
                                        </div>
                                    </div>
                                    <label class="col-sm-1 col-form-label">วันที่สิ้นสุด</label>
                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.DateTo, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker" })
                                        </div>
                                    </div>
                                    <label class="col-sm-2 col-form-label">วุฒิการฝึกอบรม</label>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Certificate, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-sm-2 col-form-label">ผู้จัดการฝึกอบรม</label>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.TrainerName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <label class="col-sm-1 col-form-label">ไฟล์แนบ</label>
                                    <div class="col-sm-6 m-t-10">
                                        <div class="input-group-prepend file-path">
                                            <i class="fa fa-cloud-download m-t-10"></i>&nbsp;&nbsp;
                                            <a class="m-t-10 file-name" target="_blank" href=@Url.Action("DownloadFileCourseTrainning", "HumanResource", new { id = Model.CourseID })>@Model.PathFile</a>
                                            <a class="btn btn-link btn-danger btn-just-icon file-delete" file-delete href="#" title="ลบ" style="margin-top: 0px;"><i class="material-icons">delete_forever</i></a>
                                        </div>
                                        @Html.TextBoxFor(m => m.fileUpload, new { @class = "form-control file-upload", @type = "file" })
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="toolbar pull-right m-t-10">
                            <button class="btn btn-primary btn-sm btn-add" data-toggle="modal"><i class="material-icons">add</i> เพิ่มผู้เข้าอบรม</button>
                        </div>
                        <div>
                            <table id="datatables" class="table table-striped table-no-bordered table-hover" cellspacing="0" style="width:100%">
                                <thead class="text-primary">
                                    <tr>
                                        <th style="width:5%" class="disabled-sorting">ลำดับ</th>
                                        <th style="width:18%">ชื่อ-นามสกุล</th>
                                        <th style="width:20%">ตำแหน่ง</th>
                                        <th style="width:47%">ฝ่าย/กอง/งาน</th>
                                        <th style="width:10%; text-align:right">ปฏิบัติการ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.ListTrainning != null)
                                    {
                                        int index = 1;
                                        for (int i = 0; i < Model.ListTrainning.Count; i++)
                                        {
                                            <tr data-userid="@Model.ListTrainning[i].UserID" data-courseid="@Model.ListTrainning[i].CourseID">
                                                <td>@index</td>
                                                <td>@Model.ListTrainning[i].FullName</td>
                                                <td>@Model.ListTrainning[i].PoName</td>
                                                <td>@Model.ListTrainning[i].DivName / @Model.ListTrainning[i].DepName / @Model.ListTrainning[i].SecName</td>
                                                <td class="td-actions text-right">
                                                    <button title="ลบ" type="button" class="btn btn-round btn-danger btn-delete" data-id="@Model.ListTrainning[i].UserID"><i class="material-icons">close</i></button>
                                                </td>
                                            </tr>
                                            index++;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
                <div class="row m-b-30">
                    <div class="ml-auto mr-auto">
                        <button type="button" class="btn btn-back">ย้อนกลับ</button>
                        <button type="button" class="btn btn-primary btn-save">บันทึก</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Classic Modal -->
<div class="modal fade modal-large modal-detail" tabindex="-1" role="dialog" aria-labelledby="modalDetailLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><span>เพิ่มพนักงานเข้าหลักสูตร</span></h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="material-icons">clear</i></button>
            </div>
            <div class="modal-body">
                <div class="content">
                    <div class="div-detail"></div>
                </div>
            </div>
            <div class="modal-footer pull-right">
                <button type="button" class="btn btn-default btn-close" data-dismiss="modal">@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnClose)</button>&nbsp;&nbsp;&nbsp;
                <button type="button" class="btn btn-primary btn-insert">เพิ่มลงรายการ</button>
            </div>
        </div>
    </div>
</div>
<!--  End Modal -->

@section Scripts {
    <script>
        $(document).ready(function () {

            if ('@Model.PathFile' != '') {
                $(".file-path").show();
                $(".file-upload").hide();
            }
            else {
                $(".file-path").hide();
                $(".file-upload").show();
            }

            $('.selectpicker').selectpicker();

            $('.datepicker').datetimepicker({
                format: 'DD/MM/YYYY',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });

            $(".file-delete").click(function () {
                $("#PathFile").val('');
                $(".file-upload").val('');
                $(".file-upload").show();
                $(".file-path").hide();
            });

            $(".file-upload").change(function () {
                debugger;
                var courseno = $('#CourseNo').val();
                $("#PathFile").val(courseno);
            });


            $(".btn-back").click(function () {
                var url = '@Url.Action("Trainning", "HumanResource")';
                window.location.href = url;
            });

            $(".btn-add").click(function () {
                var selected = '';
                $("#datatables tbody tr").each(function () {
                    var userid = $(this).data("userid");
                    selected += (selected == '') ? userid : "," + userid;
                });

                var url = '@Url.Action("GetUserTrainning", "HumanResource")';
                $.post(url, { user: selected }, function (data) {
                    $(".div-detail").html(data);
                    $('.modal-detail').modal('show');
                });
            });

            var runningIndex = function () {
                var index = 1;
                $('#datatables tbody tr td:first-child').each(function () {
                    $(this).html(index);
                    index++;
                });
            }

            $(".btn-insert").click(function () {
                var courseid = $('#CourseID').val();
                var userid = $('#UserID').val();
                var fullname = $("#UserID option:selected").text();
                var poname = $('.user-po').text();
                var devname = $('.user-belong').text();
                if (fullname != '') {
                    var newrow = '<tr data-userid="' + userid + '" data-courseid="' + courseid + '">' +
                                    '<td></td>' +
                                    '<td>' + fullname + '</td>' +
                                    '<td>' + poname + '</td>' +
                                    '<td>' + devname + '</td>' +
                                    '<td class="td-actions text-right"><button type="button" class="btn btn-round btn-danger deleteRow" data-id="' + userid + '"><i class="material-icons">close</i></button></td>' +
                                '</tr>';
                    $('#datatables tbody').append(newrow);

                    runningIndex();

                    $('.modal-detail').modal('hide');
                }
            });

            $("#datatables").on('click', ".deleteRow", function () {
                deleteRow($(this));
            });

            $(".btn-delete").click(function () {
                deleteRow($(this));
            });

            function deleteRow(itemDelete) {
                swal({
                    title: '',
                    text: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.ConfirmDelete)',
                    type: 'question',
                    showCancelButton: true,
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    confirmButtonText: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnYes)',
                    cancelButtonText: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnNo)',
                    buttonsStyling: false
                }).then(function () {
                    itemDelete.parent().parent().remove();
                    runningIndex();
                }).catch(swal.noop);
            }

            var $validatorHead = $('.formDetail').validate({
                rules: {
                    CourseName: {
                        required: true,
                    },
                    Location: {
                        required: true,
                    },
                    DateFrom: {
                        required: true,
                    },
                    DateTo: {
                        required: true,
                    },
                },
                highlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-success').addClass('has-danger');
                    $(element).closest('.custom-select').addClass('form-control-error');
                },
                success: function (element) {
                    $(element).closest('.form-group').removeClass('has-danger').addClass('has-success');
                    $(element).closest('.custom-select').removeClass('form-control-error').addClass('form-control');
                },
                errorPlacement: function (error, element) {
                    $(element).append(error);
                }
            });

            $(".btn-save").click(function () {
                var $valid = $('.formDetail').valid();
                if (!$valid) {
                    $validatorHead.focusInvalid();
                    return false;
                }
                else {
                    var qtd = 0;
                    $("#datatables tbody tr").each(function () {
                        var userid = $(this).data("userid");
                        var courseid = $(this).data("courseid");
                        $(".formDetail").prepend("<input type='hidden' name= 'ListTrainning[" + qtd + "].UserID' value= '" + userid + "' > ");
                        $(".formDetail").prepend("<input type='hidden' name= 'ListTrainning[" + qtd + "].CourseID' value= '" + courseid + "' > ");
                        qtd += 1;
                    });

                    var form = $('.formDetail')[0];
                    var data = new FormData(form);
                    data.append(".fileUpload", fileUpload);

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SaveCourseTrainning", "HumanResource")',
                        data: data,
                        dataType: 'json',
                        enctype: 'multipart/form-data',
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.MessageCode == null) {
                                swal({
                                    title: "",
                                    text: "@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.SaveSucceed)",
                                    type: "success",
                                    confirmButtonClass: "btn btn-primary",
                                    confirmButtonText: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnClose)',
                                    buttonsStyling: false,
                                }).then(function () {
                                    if ($('#CourseID').val() == 0) {
                                        var url = '@Url.Action("TrainningDetail", "HumanResource")/' + res.ID;
                                        window.location.href = url;
                                    }
                                });
                            }
                            else {
                                swal({
                                    title: '',
                                    text: res.MessageText,
                                    type: 'error',
                                    confirmButtonClass: "btn btn-primary",
                                    confirmButtonText: '@MvcHtmlString.Create(SAT.HR.Resources.ResourceSAT.btnYes)',
                                    buttonsStyling: false
                                }).catch(swal.noop);
                            }
                        }
                    });
                }
            });

        });
    </script>
}